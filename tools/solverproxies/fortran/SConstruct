# precice/src/adapters/fortan/SConstruct

import os

cpppath = ['.']
libpath = []
libs    = []

preciceRootPath = os.getenv('PRECICE_ROOT')
cpppath.append(preciceRootPath + '/src/')

tarchSrcPath = os.getenv('TARCH_SRC')
cpppath.append(tarchSrcPath)

# MPI
mpiIncPath = '/usr/include/mpich2'
cpppath.append(mpiIncPath) 

# Libs
libpath.append('/usr/lib/')
libpath.append(preciceRootPath + '/build/debug/')
libs.append('mpich')
libs.append('mpl')
libs.append('python2.7')
libs.append('stdc++')
libs.append('precice')

fortranCompiler = 'ifort'

envCompile = Environment ( 
   F90        = fortranCompiler,
   F77        = fortranCompiler,
   FORTRAN    = fortranCompiler,
   CPPPATH    = cpppath,
   LIBPATH    = libpath,
   LIBS       = libs,
   ENV        = os.environ  # propagates environment variables to scons  
   )
  
#envCompile.Object('SolverInterfaceForFortran.cpp')
envCompile.Object('SolverProxy.f')


envLink = envCompile.Clone(tools=[fortranCompiler],F90=fortranCompiler,LINK=fortranCompiler)
#envLink = envCompile.Clone(tools=['gfortran'],F90='gfortran',LINK='gfortran')
#envLink.Program(target='test', source = ['SolverDummy', 'SolverInterfaceForFortranF77'])
envLink.Program(target='SolverProxy', source = ['SolverProxy'])
